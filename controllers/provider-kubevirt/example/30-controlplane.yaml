apiVersion: v1
kind: Namespace
metadata:
  name: shoot--foo--bar # shoot--dev--local
  labels:
#    backup.gardener.cloud/provider: kubevirt
#    seed.gardener.cloud/provider: kubevirt
    shoot.gardener.cloud/provider: kubevirt
---
apiVersion: v1
kind: Secret
metadata:
  name: cloudprovider
  namespace: shoot--foo--bar
type: Opaque
data:
  domainName: ZG9tYWluLW9wZW4tc3RhY2s=
  tenantName: dGVuYW50LW9wZW4tc3RhY2s=
  username: YWRtaW4=
  password: YWRtaW4=

---
apiVersion: extensions.gardener.cloud/v1alpha1
kind: Cluster
metadata:
  name: shoot--foo--bar
spec:
  cloudProfile:
    apiVersion: garden.sapcloud.io/v1beta1
    kind: CloudProfile
    spec:
      kubevirt:
        keystoneURL: https://localhost
  seed:
    apiVersion: garden.sapcloud.io/v1beta1
    kind: Seed
  shoot:
    apiVersion: garden.sapcloud.io/v1beta1
    kind: Shoot
    spec:
      cloud:
        kubevirt:
          networks:
            pods: 10.250.0.0/19
      kubernetes:
        version: 1.13.4
      hibernation:
        enabled: false
    status:
      lastOperation:
        state: Succeeded
---
apiVersion: extensions.gardener.cloud/v1alpha1
kind: ControlPlane
metadata:
  name: control-plane
  namespace: shoot--foo--bar
spec:
  type: kubevirt
  region: europe-west1
  secretRef:
    name: cloudprovider
    namespace: shoot--foo--bar
  providerConfig:
    apiVersion: kubevirt.provider.extensions.gardener.cloud/v1alpha1
    kind: ControlPlaneConfig
    dhcpDomain: "somedhcpdomain"
    requestTimeout: "2s"
    loadBalancerProvider: "provider"
#   zone: europe-west1a
    cloudControllerManager:
      featureGates:
        CustomResourceValidation: true
  infrastructureProviderStatus:
    apiVersion: kubevirt.provider.extensions.gardener.cloud/v1alpha1
    kind: InfrastructureStatus
    networks:
      floatingPool:
        id: vpc-1234
      subnets:
      - purpose: nodes
        id: subnetid